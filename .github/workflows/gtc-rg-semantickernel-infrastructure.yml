on:
  push:
    branches-ignore:
    - main
    paths:
    - .github/workflows/gtc-rg-PRODUCTNAME-infrastructure.yml
    - .azure/**/*.json
  pull_request:
    branches:
    - main    
    paths:
    - .github/workflows/gtc-rg-PRODUCTNAME-infrastructure.yml
    - .azure/**/*.json
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run'     
        required: true
        default: 'development'
      mode:
        description: 'Running mode'  

env:
  # Shared Landing Zone
  SHARED_RG_NAME: 'gtc-rg-shared-dev-001'
  SHARED_RG_LOCATION: 'westus2'
  SHARED_BICEP_TEMPLATE: '.azure/templates/landingzone-shared.bicep'
  SHARED_BICEP_PARAMETERS: '.azure/variables/landingzone-shared-development.bicepparam'
  # Product Landing Zone
  PRODUCT_RG_LOCATION: 'westus2'
  PRODUCT_RG_NAME: 'gtc-rg-semantickernel-dev-001'
  KEYVAULT_NAME: 'kv-semantickernel-dev-001'
  PRODUCT_BICEP_TEMPLATE: '.azure/templates/landingzone-appservice.bicep'
  PRODUCT_BICEP_PARAMETERS: '.azure/variables/landingzone-appservice-development.bicepparam'
  PIPELINE_IDENTITY_OBJECT_ID: ''

permissions:
  id-token: write
  contents: read
  security-events: write

jobs:  
  development_Stage_deploy_landing_zone:
    name: 'Deploy landing zone IaC'
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Secret setup and IAM privileges: 
      #   1. Create GitHub repo environments, development, production
      #   2. Create Azure App Registration with client secret: 
      #     - https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure
      #   3. Grant Azure App Registration identity Contributor privilege to subscription
      #     - gtc-semantickernel-github-production - Production environment - repo:goodtocode/semantickernel-microservice:environment:production
      #     - gtc-semantickernel-github-main - Main repository - repo:goodtocode/semantickernel-microservice:ref:refs/heads/main
      #     - gtc-semantickernel-github-pullrequest - Pull request - repo:goodtocode/semantickernel-microservice:pull_request
      #     - gtc-semantickernel-github-development - Development environment - repo:goodtocode/semantickernel-microservice:environment:development
      #   4. Add the secrets: AZURE_CLIENT_ID, AZURE_TENANT_ID, AZURE_SUBSCRIPTION_ID
      #   5. Create a service principle and assign it to the Contributor role in the subscription
      #     - az ad sp create-for-rbac --name "gtc-semantickernel-github-001" --role contributor --scopes /subscriptions/{subscription-id}/resourceGroups/{resource-group} --json-auth
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # SHARED RG
      - name: Create ${{ env.SHARED_RG_NAME }}
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: |
            az group create -n ${{ env.SHARED_RG_NAME }} -l ${{ env.SHARED_RG_LOCATION }}

      - name: Validate ${{ env.SHARED_RG_NAME }}
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: |
            az deployment group what-if --resource-group ${{ env.SHARED_RG_NAME }} --template-file ${{ env.SHARED_BICEP_TEMPLATE }} --parameters ${{ env.SHARED_BICEP_PARAMETERS }}

      - name: Deploy ${{ env.SHARED_RG_NAME }}
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: |
            az deployment group create --resource-group ${{ env.SHARED_RG_NAME }} --template-file ${{ env.SHARED_BICEP_TEMPLATE }} --parameters ${{ env.SHARED_BICEP_PARAMETERS }}

      # PRODUCT RG
      - name: Create ${{ env.PRODUCT_RG_NAME }}
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: |
            az group create -n ${{ env.PRODUCT_RG_NAME }} -l ${{ env.PRODUCT_RG_LOCATION }}

      - name: Validate ${{ env.PRODUCT_RG_NAME }}
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: |
            az deployment group what-if --resource-group ${{ env.PRODUCT_RG_NAME }} --template-file ${{ env.PRODUCT_BICEP_TEMPLATE }} --parameters ${{ env.PRODUCT_BICEP_PARAMETERS }}

      - name: Deploy ${{ env.PRODUCT_RG_NAME }}
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: |
            az deployment group create --resource-group ${{ env.PRODUCT_RG_NAME }} --template-file ${{ env.PRODUCT_BICEP_TEMPLATE }} --parameters ${{ env.PRODUCT_BICEP_PARAMETERS }}
            az keyvault set-policy --name '${{ env.KEYVAULT_NAME }}' --object-id ${{ env.PIPELINE_IDENTITY_OBJECT_ID }} --secret-permissions get list